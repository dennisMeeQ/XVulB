spring.mvc.view.prefix: /
spring.mvc.view.suffix: .jsp
spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://localhost:5432/xvulb}
spring.datasource.username=${POSTGRES_USER:xvulb}
spring.datasource.password=${POSTGRES_PASS:password}

# fix startup error "Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented"
# reference https://github.com/spring-projects/spring-boot/issues/12007#issuecomment-369388646
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

logging.level.org.springframework.web=DEBUG
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml
google.recaptcha.key-site=6LefDkwUAAAAAH20_0jZI2JNic67TnXNgXX1Ge75
google.recaptcha.key-secret=6LefDkwUAAAAABpER78opXPigwJfmCIgAufnN5KI
google.recaptcha.u-r-i=https://www.google.com/recaptcha/api/siteverify
server.servlet.session.cookie.secure= true

# Turn Password Bruteforce on or off
# False = no protection, Password Bruteforce is exploitable
# Captcha = protection, using Google Recaptcha to prevent Pw_bruteforce
security.pwbruteforce= ${SECURITY_PWBRUTEFORCE:False}

# Turn Session Fixation on or off
# False = no protection, Session Fixation is exploitable
# True = protection, Session Fixation not exploitable
security.ss-fixation= ${SECURITY_SS_FIXATION:True}

# Turn SQLi on or off
# False = no protection, SQLi is exploitable
# True = protection, SQLi not exploitable
security.sql-injection= ${SECURITY_SQL_INJECTION:False}

# 4 main types to store password in db
# Clear: Clear text
# Hashed: use SHA256
# SaltHashed: use SHA256 with Salt string
# PBKDF2
security.pw-storage= ${SECURITY_PW_STORAGE:SaltHashed}

# Turn Reset-all-password-of-database on or off
security.reset-password= ${SECURITY_RESET_PASSWORD:True}

# Turn Set Secure Cookie on or off
# False = no protection
# True = protection
security.set-cookie= ${SECURITY_SET_COOKIE:True}

# Turn XSS Prevention on or off
# False = no protection
# True = protection
security.xss-prevention= ${SECURITY_XSS_PROTECTION:False}

